{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/clement/Documents/MMI/POO 2O2O/weather-app/weather-app/components/Home.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport default function Home() {\n  var d = new Date().getDate();\n  var date = d.toString().padStart(2, '0');\n  var m = new Date().getMonth() + 1;\n  var month = m.toString().padStart(2, '0');\n  var year = new Date().getFullYear();\n  var h = new Date().getHours();\n  var heure = h.toString().padStart(2, '0');\n  var mi = new Date().getMinutes();\n  var minu = mi.toString().padStart(2, '0');\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      icon = _useState6[0],\n      setIcon = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      temp = _useState8[0],\n      setTemp = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      min = _useState10[0],\n      setMin = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      max = _useState12[0],\n      setMax = _useState12[1];\n\n  fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Madrid&units=metric&appid=008b40e40732624e015ce068cbf7ac72&lang=fr\").then(function (response) {\n    return response.json();\n  }).then(function (r) {\n    setCity(r.name);\n    setDesc(r.weather[0].description);\n    setIcon(r.weather[0].icon);\n    setTemp(r.main.temp.toFixed(1));\n    setMin(r.main.temp_min.toFixed(1));\n    setMax(r.main.temp_max.toFixed(1));\n  });\n  return React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }, React.createElement(Text, {\n    style: styles.h1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, \"Pr\\xE9visions pour aujourd'hui \\xE0\"), React.createElement(Text, {\n    style: styles.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, city), React.createElement(View, {\n    style: styles.weather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(Image, {\n    style: styles.iconWeather,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: styles.p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }, temp, \"\\xB0C\"), React.createElement(Text, {\n    style: styles.p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }, desc), React.createElement(Text, {\n    style: styles.p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, date, \"/\", month, \"/\", year))));\n}\nvar styles = StyleSheet.create({\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  h1: {\n    fontSize: 18,\n    marginTop: 40,\n    color: 'white'\n  },\n  h2: {\n    marginTop: 10,\n    fontSize: 25,\n    color: 'white'\n  },\n  p: {\n    fontSize: 18,\n    margin: 5,\n    color: 'white'\n  },\n  weather: {\n    marginTop: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderRadius: 5,\n    borderColor: 'white'\n  },\n  iconWeather: {\n    height: 100,\n    width: 100,\n    marginRight: 20\n  },\n  prevButton: {\n    color: 'black',\n    backgroundColor: 'white',\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["/Users/clement/Documents/MMI/POO 2O2O/weather-app/weather-app/components/Home.js"],"names":["React","useState","Home","d","Date","getDate","date","toString","padStart","m","getMonth","month","year","getFullYear","h","getHours","heure","mi","getMinutes","minu","city","setCity","desc","setDesc","icon","setIcon","temp","setTemp","min","setMin","max","setMax","fetch","then","response","json","r","name","weather","description","main","toFixed","temp_min","temp_max","styles","content","h1","h2","iconWeather","uri","p","StyleSheet","create","display","alignItems","width","fontSize","marginTop","color","margin","flexDirection","borderStyle","borderWidth","borderRadius","borderColor","height","marginRight","prevButton","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, StyleSheet, Image} from 'react-native';\n\n\n\n\n \nexport default function Home() {\n\n    var d = new Date().getDate();\n    var date = d.toString().padStart(2, '0');\n    var m = new Date().getMonth() + 1;\n    var month = m.toString().padStart(2, '0'); \n    var year = new Date().getFullYear();\n    var h = new Date().getHours();\n    var heure = h.toString().padStart(2, '0');\n    var mi = new Date().getMinutes();\n    var minu = mi.toString().padStart(2, '0');\n\n    const [city, setCity] = useState('');\n    const [desc, setDesc] = useState('');\n    const [icon, setIcon] = useState('');\n    const [temp, setTemp] = useState('');\n    const [min, setMin] = useState('');\n    const [max, setMax] = useState('');\n    // const [country, setCountry] = useState('F');\n\n   fetch(`https://api.openweathermap.org/data/2.5/weather?q=Madrid&units=metric&appid=008b40e40732624e015ce068cbf7ac72&lang=fr`)\n      .then((response) => response.json())\n      .then(r => { \n         setCity(r.name) \n         setDesc(r.weather[0].description)\n         setIcon(r.weather[0].icon)\n         setTemp(r.main.temp.toFixed(1))\n         setMin(r.main.temp_min.toFixed(1))\n         setMax(r.main.temp_max.toFixed(1))\n        //  setCountry(getCountryName(r.sys.country))\n      })\n\n    return (\n\n            <View style={styles.content}>\n                <Text style={styles.h1}>Prévisions pour aujourd'hui à</Text>\n                <Text style={styles.h2}>{city}</Text>\n                <View style={styles.weather}>\n                    <Image style={styles.iconWeather} source={{\n                    uri: `http://openweathermap.org/img/wn/${icon}@2x.png`,\n                }}/>\n                        <View>\n                            <Text style={styles.p}>{temp}°C</Text>\n                            <Text style={styles.p}>{desc}</Text>\n                            <Text style={styles.p}>{date}/{month}/{year}</Text>\n                        </View>\n                </View>\n            </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    content: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%'\n    },\n\n    h1: {\n        fontSize: 18,\n        marginTop: 40,\n        color: 'white'\n    },\n\n    h2: {\n        marginTop: 10,\n        fontSize: 25,\n        color: 'white'\n    },\n\n    p: {\n        fontSize: 18,\n        margin: 5,\n        color: 'white'\n    },\n\n    weather: {\n        marginTop: 20,\n        display: 'flex',\n        flexDirection: 'row',\n        borderStyle: 'solid',\n        borderWidth: 4,\n        borderRadius: 5,\n        borderColor: 'white' \n    },\n\n    iconWeather: {\n        height: 100,\n        width: 100,\n        marginRight: 20\n    },\n\n    prevButton: {\n        color: 'black',\n        backgroundColor: 'white',\n        width: 100,\n        height: 100\n    }\n\n  });"]},"metadata":{},"sourceType":"module"}